name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  #tests:
  #  runs-on: ubuntu-latest

  #  strategy:
  #    fail-fast: false
  #    matrix:
  #      python-version: ['3.9']
  #      aw-server: ["aw-server", "aw-server-rust"]
  #      aw-version: ["v0.10.0"]

  #  steps:
  #  - uses: actions/checkout@v2
  #    with:
  #      submodules: 'recursive'
  #  - name: Set up Python
  #    uses: actions/setup-python@v1
  #    with:
  #      python-version: ${{ matrix.python-version }}

  #  - name: Set up ActivityWatch
  #    uses: ActivityWatch/setup-action@v1
  #    with:
  #      aw-server: ${{ matrix.python-server }}
  #      aw-version: ${{ matrix.python-version }}
  #      aw-testing: true
  #      fakedata: true

  #  - name: Install
  #    run: |
  #      pip install poetry
  #      poetry install

  #  - name: Run tests
  #    run: |
  #      make test
     
  notebooks:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9']
        aw-server: ["aw-server", "aw-server-rust"]
        aw-version: ["v0.10.0"]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up ActivityWatch
      uses: ActivityWatch/setup-action@v2
      with:
        aw-server: ${{ matrix.aw-server }}
        aw-version: ${{ matrix.aw-version }}
        aw-testing: false
        fakedata: true

    - name: Install
      run: |
        pip install poetry
        poetry install

    - name: Build notebooks
      env:
        aw_server: ${{ matrix.aw-server }}
        aw_version: ${{ matrix.aw-version }}
      run: |
        make notebooks
        mkdir notebooks/build/$aw_server
        mv notebooks/build/*.html notebooks/build/$aw_server/

    - name: Upload notebooks
      uses: actions/upload-artifact@v2
      with:
        name: notebooks
        path: notebooks/output


  deploy:
    runs-on: ubuntu-latest
    needs: [notebooks]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: notebooks
          path: dist

      - name: Display structure of downloaded files
        run: ls -R

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v3
        if: github.ref == 'refs/heads/master'
        with:
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
